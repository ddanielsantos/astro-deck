---
import { ViewTransitions } from 'astro:transitions';
import { SlideControls } from '../components/SlideControls'

function getSlideFromPathname(
    pathname: string | undefined
): string | undefined {
    return pathname?.split("/").at(-1) || pathname?.split("/").at(-2);
}

function getCurrentSlide(): number {
    return Number(getSlideFromPathname(Astro.url.pathname));
}

async function getSlides() {
    return await Astro.glob("../pages/slides/*.mdx");
}

const currentSlide = getCurrentSlide();
const slides = await getSlides();
const numberOfSlides = slides.length;
const hasNext = currentSlide !== numberOfSlides;
const hasPrev = currentSlide !== 1;
const nextSlideUrl = `/slides/${currentSlide + 1}`;
const prevSlideUrl = `/slides/${currentSlide - 1}`;
---

<head>
    <ViewTransitions />
</head>

<div>
    <p>
        slide {currentSlide} of {numberOfSlides}
    </p>
    <!-- TODO: custom transitions -->
    <div transition:animate="slide">
        <slot/>
    </div>
    <SlideControls hasNext={hasNext} hasPrev={hasPrev} prevSlideUrl={prevSlideUrl} nextSlideUrl={nextSlideUrl}/>
    {
        slides.map((slide, index) => (
            <a href={`/slides/${index + 1}`}>
                {getSlideFromPathname(slide.url)}
            </a>
        ))
    }
</div>

<script define:vars={{ hasNext, hasPrev, nextSlideUrl, prevSlideUrl }}>
    document.addEventListener('keydown', (event) => {
        if (event.key === 'ArrowRight' && hasNext) {
            document.querySelector('#next')?.click();
        }

        if (event.key === 'ArrowLeft' && hasPrev) {
            document.querySelector('#prev')?.click();
        }
    })
</script>